#!/usr/bin/env python
"""
Converts camera feed encoding to something find_object_2d can work with

SUBSCRIBES:
/io/internal_camera/right_hand_camera/image_rect - rectified mono8 image feed from arm cam

PUBLISHES:
/image_converted - image converted to bgr8 format

"""

import cv2
import rospy
from sensor_msgs.msg import Image
from cv_bridge import CvBridge, CvBridgeError


class CameraConverter(object):
    """
    A class that converts the sawyer hand camera feed to a format usable with find_object_2d
    """

    def __init__(self):

        self.bridge = CvBridge()
        self.image_sub = rospy.Subscriber("/io/internal_camera/right_hand_camera/image_rect", Image, self.image_callback)
        self.image_pub = rospy.Publisher("/image_converted", Image, queue_size=10)

    def image_callback(self, data):
        """
        Callback for subscribing to the sawyer hand camera
        """
        try:
            cv_image = self.bridge.imgmsg_to_cv2(data, "mono8")
        except CvBridgeError as e:
            print(e)

        cv_image = cv2.cvtColor(cv_image, cv2.COLOR_GRAY2RGB)

        try:
            self.image_pub.publish(self.bridge.cv2_to_imgmsg(cv_image, "bgr8"))
        except CvBridgeError as e:
            print(e)


def main():
    """ The main() function. """
    rospy.init_node('camera_converter')
    auto_mapping = CameraConverter()
    rospy.spin()


if __name__ == '__main__':
    try:
        main()
    except rospy.ROSInterruptException:
        pass